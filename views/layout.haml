!!!
%html
  %head
    %title SocialQuiz
    %meta{:charset => "utf-8"}
    %link{:href => "/css/bootstrap.min.css", :rel => "stylesheet"}
    %link{:href => "/css/layout.css", :rel => "stylesheet"}
    %link{:href => "/css/newQuiz.css", :rel => "stylesheet"}
    %link{:href => "/css/bootstrap-tagsinput.css", :rel => "stylesheet"}
    %link{:href => "/css/newExam.css", :rel => "stylesheet"}
    %link{:href => "/css/exam.css", :rel => "stylesheet"}
    %link{:href => "/css/grupos.css", :rel => "stylesheet"}
    / ----- Links DualListBox
    %link{:href => "/css/bootstrap-duallistbox.css", :rel => "stylesheet", :type => "text/css"}
    / ----- Fin Links DualListBox
    /------ Links DatePicker (campo fecha de formulario)
    %link{:href => "/css/bootstrap-datetimepicker.min.css", :rel => "stylesheet"}
    /------ Fin DatePicker
    /%link{:href => "/css/codemirror.css", :rel => "stylesheet"}
    / ----- Grupos de usuarios examenes
    /%link{:href => "/css/group-users-list.css", :rel => "stylesheet"}
    / ----- Fin grupos usuarios examenes
    %link{:rel => "icon", :type => "image/ico", :href => "img/logo.ico"}
    %script{:src => "/js/jquery.min.js"}
    /%script{:src => "/js/menu.js"}
    %script{:src => "/js/functions.js"}
    %script{:src => "/js/bootstrap.min.js"}
    %script{:src => "/js/bootstrap-tagsinput.js"}
    %script{:src => "/js/newExam.js"}
    /%script{:src => "/js/codemirror.js"}
    %script{:src => "http://www.google.com/jsapi"}
    / ----- Links DualListBox
    %script{:src => "/js/jquery.bootstrap-duallistbox.js"}
    / ----- Fin Links DualListBox
    /------ Links DatePicker (campo fecha de formulario)
    %script{:src => "/js/moment/moment.js"}
    %script{:src => "/js/bootstrap-datetimepicker.min.js"}
    %script{:src => "/js/moment/es.js"}
    /------ Fin DatePicker
    %script{:src => "/js/groups.js"}
    /------ Grupos de usuarios examenes
    /%script{:src => "/js/group-users-list.js"}
    / ----- Fin grupos usuarios examenes

    %script{:src => "/js/MathJax.js?config=TeX-AMS-MML_HTMLorMML", :type => "text/javascript"}    

    %script{:type => "text/x-mathjax-config"}
      MathJax.Hub.Config({
      showProcessingMessages: false,
      tex2jax: { inlineMath: [['$','$'],['\\(','\\)']] }
      });
    :javascript
      var Preview = {
        delay: 150,        // delay after keystroke before updating
      
        preview: null,     // filled in by Init below
        buffer: null,      // filled in by Init below
      
        timeout: null,     // store setTimout id
        mjRunning: false,  // true when MathJax is processing
        oldText: null,     // used to check if an update is needed
      
        //
        //  Get the preview and buffer DIV's
        //
        Init: function () {
          this.preview = document.getElementById("MathPreview");
          this.buffer = document.getElementById("MathBuffer");
        },
      
        //
        //  Switch the buffer and preview, and display the right one.
        //  (We use visibility:hidden rather than display:none since
        //  the results of running MathJax are more accurate that way.)
        //
        SwapBuffers: function () {
          var buffer = this.preview, preview = this.buffer;
          this.buffer = buffer; this.preview = preview;
          buffer.style.visibility = "hidden"; buffer.style.position = "absolute";
          preview.style.position = ""; preview.style.visibility = "";
        },
      
        //
        //  This gets called when a key is pressed in the textarea.
        //  We check if there is already a pending update and clear it if so.
        //  Then set up an update to occur after a small delay (so if more keys
        //    are pressed, the update won't occur until after there has been 
        //    a pause in the typing).
        //  The callback function is set up below, after the Preview object is set up.
        //
        Update: function () {
          if (this.timeout) {clearTimeout(this.timeout)}
          this.timeout = setTimeout(this.callback,this.delay);
        },
      
        //
        //  Creates the preview and runs MathJax on it.
        //  If MathJax is already trying to render the code, return
        //  If the text hasn't changed, return
        //  Otherwise, indicate that MathJax is running, and start the
        //    typesetting.  After it is done, call PreviewDone.
        //  
        CreatePreview: function () {
          Preview.timeout = null;
          if (this.mjRunning) return;
          var text = document.getElementById("MathInput").value;
          if (text === this.oldtext) return;
          this.buffer.innerHTML = this.oldtext = text;
          this.mjRunning = true;
          MathJax.Hub.Queue(
            ["Typeset",MathJax.Hub,this.buffer],
            ["PreviewDone",this]
          );
        },
      
        //
        //  Indicate that MathJax is no longer running,
        //  and swap the buffers to show the results.
        //
        PreviewDone: function () {
          this.mjRunning = false;
          this.SwapBuffers();
        }
      
      };
      
      //
      //  Cache a callback to the CreatePreview action
      //
      Preview.callback = MathJax.Callback(["CreatePreview",Preview]);
      Preview.callback.autoReset = true;  // make sure it can run more than once



  %body
    .container{:style => "padding-top: 1em;"}
      %nav.navbar.navbar-default{:role => "navigation"}
        /
          El logotipo y el icono que despliega el menú se agrupan
          para mostrarlos mejor en los dispositivos móviles
        .navbar-header
          %button.navbar-toggle{"data-target" => ".navbar-ex1-collapse", "data-toggle" => "collapse", :type => "button"}
            %span.sr-only Desplegar navegación
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          %a.navbar-brand{:href => "/"} SocialQuiz
        /
          Agrupar los enlaces de navegación, los formularios y cualquier
          otro elemento que se pueda ocultar al minimizar la barra
        .collapse.navbar-collapse.navbar-ex1-collapse
          %ul.nav.navbar-nav
            - if (@actual == "inicio")
              %li.active.elementos
                %a{:href => "/"} INICIO
            - else
              %li
                %a{:href => "/"} INICIO
            - if (@actual == 'preguntas')
              %li.active.elementos
                %a{:href => "/preguntas"} PREGUNTAS
            - else
              %li
                %a{:href => "/preguntas"} PREGUNTAS
            - if (@actual == 'examenes')
              %li.active.elementos
                %a{:href => '/examenes'} EXÁMENES
            - else
              %li
                %a{:href => "/examenes"} EXÁMENES
            - if (@actual == "calificaciones")
              %li.active.elementos
                %a{:href => "/calificaciones"} CALIFICACIONES
            - else
              %li
                %a{:href => "/calificaciones"} CALIFICACIONES
            - if (@actual == "grupos")
              %li.active.elementos
                %a{:href => "/grupos"} GRUPOS
            - else
              %li
                %a{:href => "/grupos"} GRUPOS
            %li
              %img{:id => "imagen-menu", :class => "img-circle", :src => session[:imagen] }
            %p.navbar-text.pull-left
              %a.navbar-link{:href => "#"}
                %b= session[:user]
              \-
              %a{:href => "/configuracion"} Configuración
              \-
              %a{:href => "/logout"} Salir
              
          %form.navbar-form.navbar-right{:role => "search"}
            .form-group
              %input.form-control{:placeholder => "Buscar", :type => "text"}/
            %button.btn.btn-default{:type => "submit"} Buscar
      - if (flash[:mensaje])
        //%button.close{"aria-label" => "Close", "data-dismiss" => "alert", :type => "button"}
        //  %span{"aria-hidden" => "true"} &times;
        .alert.alert-success{:role => "alert"}= flash[:mensaje]
      - elsif (flash[:mensajeRojo])
        .alert.alert-danger{:role => "alert"}= flash[:mensajeRojo]

      = yield
      
    %script{:src => "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"}